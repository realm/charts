{{- if .Values.grafana.enabled -}}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-grafana
  labels:
    app: {{ .Release.Name }}-grafana
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}-grafana
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-grafana
        release: {{ .Release.Name }}
      annotations:
        checksum/dashboards-config: {{ include (print $.Template.BasePath "/grafana-dashboards.yaml") . | sha256sum }}
    spec:
      containers:
        - name: grafana
          image: grafana/grafana:5.0.3
          env:
            - name: GF_AUTH_ANONYMOUS_ENABLED
              value: "true"
            - name: GF_AUTH_ANONYMOUS_ORG_ROLE
              value: "Admin"
          ports:
            - name: http
              containerPort: 3000
          resources:
            requests:
              memory: 100Mi
              cpu: 100m
            limits:
              memory: 200Mi
              cpu: 200m
          volumeMounts:
            - name: datasources
              mountPath: /etc/grafana/provisioning/datasources
            - name: dashboards
              mountPath: /etc/grafana/provisioning/dashboards
      volumes:
        - name: datasources
          configMap:
            name: {{ .Release.Name }}-grafana-datasources
        - name: dashboards
          configMap:
            name: {{ .Release.Name }}-grafana-dashboards
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-grafana
  labels:
    app: {{ .Release.Name }}-grafana
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
  annotations:
    {{- range $key, $value := .Values.grafana.service.annotations }}
      {{ $key }}: {{ $value | quote }}
    {{- end }}
spec:
  type: {{ .Values.grafana.service.type }}
  ports:
  - port: {{ .Values.grafana.service.port }}
    targetPort: http
    {{- if .Values.grafana.service.nodePort }}
    nodePort: {{ .Values.grafana.service.nodePort }}
    {{- end }}
  selector:
    app: {{ .Release.Name }}-grafana
    release: {{ .Release.Name }}
---
{{- if .Values.grafana.ingress.enabled -}}
{{- $release := .Release -}}
{{- $servicePort := .Values.grafana.service.port -}}
{{- $ingressPath := .Values.grafana.ingress.path -}}
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: {{ .Release.Name }}-grafana
  labels:
    app: {{ .Release.Name }}-grafana
    chart: {{ template "realm-object-server.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
{{- with .Values.grafana.ingress.annotations }}
  annotations:
{{ toYaml . | indent 4 }}
{{- end }}
spec:
{{- if .Values.grafana.ingress.tls }}
  tls:
  {{- range .Values.grafana.ingress.tls }}
    - hosts:
      {{- range .hosts }}
        - {{ . }}
      {{- end }}
      secretName: {{ .secretName }}
  {{- end }}
{{- end }}
  rules:
  {{- range .Values.grafana.ingress.hosts }}
    - host: {{ . }}
      http:
        paths:
          - path: {{ $ingressPath }}
            backend:
              serviceName: {{ $release.Name }}-grafana
              servicePort: http
  {{- end }}
---
{{- end }}
{{- end }}
